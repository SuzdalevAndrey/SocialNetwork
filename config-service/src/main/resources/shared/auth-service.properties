#Postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/auth-service
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=public

#JWT
jwt.secret=6yU3AaLTrj/YSKQtYF6yU3/YSKAaLTIv9aRtGxOcU39h7T/aRtGxO+syA=

#Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.instance.prefer-ip-address=true

#KafkaProducer
spring.kafka.producer.bootstrapServers=localhost:9092

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.producer.topicNameSaveUser=auth-event-save-user
spring.kafka.producer.topicNameLoginUser=auth-event-login
spring.kafka.producer.topicNameRegisterUser=auth-event-register

#KafkaConsumer
spring.kafka.consumer.bootstrapServers=localhost:9092

spring.kafka.consumer.topicNameFailureSendRegisterMail=notification-event-failure-register-mail
spring.kafka.consumer.topicNameFailureSaveUser=user-event-failure-save-user

spring.kafka.consumer.groupId=auth-group

#Redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.accessTokenNameCache=accessTokenCache
spring.redis.refreshTokenNameCache=refreshTokenCache
spring.redis.kafkaMessageIdsNameCache=kafkaMessageIdsNameCache

#Prometheus
management.endpoints.web.exposure.include[0]=health
management.endpoints.web.exposure.include[1]=prometheus
management.metrics.tags.application=auth-service