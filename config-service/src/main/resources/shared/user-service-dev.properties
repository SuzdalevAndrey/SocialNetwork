#Postgres
spring.datasource.url=jdbc:postgresql://postgres:${POSTGRES_PORT}/user-service
spring.datasource.username=${POSTGRES_USER}
spring.datasource.password=${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=public

#Eureka
eureka.client.service-url.defaultZone=http://eureka-server:${EUREKA_PORT}/eureka/
eureka.instance.prefer-ip-address=true

#Kafka
spring.kafka.bootstrapServers=kafka:${KAFKA_PORT}

#KafkaProducer
spring.kafka.producer.keySerializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.valueSerializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.producer.topicNameEditEmail=user-event-edit-email
spring.kafka.producer.topicNameEditPassword=user-event-edit-password
spring.kafka.producer.topicNameFailureSaveUser=user-event-failure-save-user

#KafkaConsumer
spring.kafka.consumer.topicNameSaveUser=auth-event-save-user

spring.kafka.consumer.groupId=user-group

#Prometheus
management.endpoints.web.exposure.include[0]=health
management.endpoints.web.exposure.include[1]=prometheus
management.metrics.tags.application=user-service
management.endpoint.prometheus.enabled=true

#Redis
spring.data.redis.host=redis
spring.data.redis.port=${REDIS_PORT}
spring.redis.kafkaMessageIdsNameCache=kafkaMessageIdsCache

#S3
s3-load-image-starter.provider=${S3_PROVIDER}
s3-load-image-starter.expiration-url-in-minutes=10000
s3-load-image-starter.endpoint=http://minio:${S3_PORT}
s3-load-image-starter.access-key=${S3_ACCESS_KEY}
s3-load-image-starter.secret-key=${S3_SECRET_KEY}
s3-load-image-starter.bucket-name=images-user-avatar
